{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/first-page/first-page.component.css","webpack:///./src/app/first-page/first-page.component.html","webpack:///./src/app/first-page/first-page.component.ts","webpack:///./src/app/my-dashboard/my-dashboard.component.css","webpack:///./src/app/my-dashboard/my-dashboard.component.html","webpack:///./src/app/my-dashboard/my-dashboard.component.ts","webpack:///./src/app/my-nav/my-nav.component.css","webpack:///./src/app/my-nav/my-nav.component.html","webpack:///./src/app/my-nav/my-nav.component.ts","webpack:///./src/app/my-table/my-table-datasource.ts","webpack:///./src/app/my-table/my-table.component.css","webpack:///./src/app/my-table/my-table.component.html","webpack:///./src/app/my-table/my-table.component.ts","webpack:///./src/app/second-page/second-page.component.css","webpack:///./src/app/second-page/second-page.component.html","webpack:///./src/app/second-page/second-page.component.ts","webpack:///./src/app/third-page/third-page.component.css","webpack:///./src/app/third-page/third-page.component.html","webpack:///./src/app/third-page/third-page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MyNavComponent } from './my-nav/my-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n} from '@angular/material';\nimport { MyDashboardComponent } from './my-dashboard/my-dashboard.component';\nimport { MyTableComponent } from './my-table/my-table.component';\nimport { FirstPageComponent } from './first-page/first-page.component';\nimport { SecondPageComponent } from './second-page/second-page.component';\nimport { ThirdPageComponent } from './third-page/third-page.component';\n\nconst appRoutes: Routes = [\n    { path: '', component: MyDashboardComponent },\n    { path: 'first-page', component: FirstPageComponent },\n    { path: 'second-page', component: SecondPageComponent },\n    { path: 'third-page', component: ThirdPageComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyNavComponent,\n    MyDashboardComponent,\n    MyTableComponent,\n    FirstPageComponent,\n    SecondPageComponent,\n    ThirdPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-card {\\n    max-width: 400px;\\n}\\n.example-header-image {\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\n    background-size: cover;\\n}\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav\\n            #drawer\\n            class=\\\"sidenav\\\"\\n            fixedInViewport=\\\"true\\\"\\n            [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n            [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n            [opened]=\\\"!(isHandset$ | async)\\\">\\n        <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n        <mat-nav-list>\\n            <a mat-list-item routerLink=\\\"/\\\">Dashboard</a>\\n            <a mat-list-item routerLink=\\\"/first-page\\\">First Page</a>\\n            <a mat-list-item routerLink=\\\"/second-page\\\">Second Page</a>\\n            <a mat-list-item routerLink=\\\"/third-page\\\">Third Page</a>\\n        </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n        <mat-toolbar color=\\\"primary\\\">\\n            <button\\n                    type=\\\"button\\\"\\n                    aria-label=\\\"Toggle sidenav\\\"\\n                    mat-icon-button\\n                    (click)=\\\"drawer.toggle()\\\"\\n                    *ngIf=\\\"isHandset$ | async\\\">\\n                <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n            </button>\\n            <span>Application Title</span>\\n        </mat-toolbar>\\n        <div>\\n            <mat-card class=\\\"example-card\\\">\\n                <mat-card-header>\\n                    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n                    <mat-card-title>Shiba Inu</mat-card-title>\\n                    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\\n                </mat-card-header>\\n                <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n                <mat-card-content>\\n                    <p>\\n                        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n                        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n                        bred for hunting.\\n                    </p>\\n                </mat-card-content>\\n                <mat-card-actions>\\n                    <button mat-button>LIKE</button>\\n                    <button mat-button>SHARE</button>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from \"@angular/cdk/layout\";\nimport {Observable} from \"rxjs/index\";\nimport {map} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.css']\n})\nexport class FirstPageComponent implements OnInit {\n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n        .pipe(\n            map(result => result.matches)\n        );\n\n\n  constructor(private breakpointObserver: BreakpointObserver) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n          #drawer\\n          class=\\\"sidenav\\\"\\n          fixedInViewport=\\\"true\\\"\\n          [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n          [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n          [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/\\\">Dashboard</a>\\n      <a mat-list-item routerLink=\\\"/first-page\\\">First Page</a>\\n      <a mat-list-item routerLink=\\\"/second-page\\\">Second Page</a>\\n      <a mat-list-item routerLink=\\\"/third-page\\\">Third Page</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n              type=\\\"button\\\"\\n              aria-label=\\\"Toggle sidenav\\\"\\n              mat-icon-button\\n              (click)=\\\"drawer.toggle()\\\"\\n              *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Dashboard</span>\\n    </mat-toolbar>\\n    <div class=\\\"grid-container\\\">\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n        <mat-grid-tile *ngFor=\\\"let card of cards\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n          <mat-card class=\\\"dashboard-card\\\">\\n            <mat-card-header>\\n              <mat-card-title>\\n                {{card.title}}\\n                <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n                  <mat-icon>more_vert</mat-icon>\\n                </button>\\n                <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n                  <button mat-menu-item>Expand</button>\\n                  <button mat-menu-item>Remove</button>\\n                </mat-menu>\\n              </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content class=\\\"dashboard-card-content\\\">\\n              <div>Card Content Here</div>\\n            </mat-card-content>\\n          </mat-card>\\n        </mat-grid-tile>\\n      </mat-grid-list>\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import {Component} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from \"@angular/cdk/layout\";\nimport {Observable} from \"rxjs/index\";\nimport {map} from \"rxjs/operators\";\n\n@Component({\n    selector: 'my-dashboard',\n    templateUrl: './my-dashboard.component.html',\n    styleUrls: ['./my-dashboard.component.css']\n})\nexport class MyDashboardComponent {\n    cards = [\n        {title: 'Card 1', cols: 2, rows: 1},\n        {title: 'Card 2', cols: 1, rows: 1},\n        {title: 'Card 3', cols: 1, rows: 2},\n        {title: 'Card 4', cols: 1, rows: 1}\n    ];\n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n        .pipe(\n            map(result => result.matches)\n        );\n\n    constructor(private breakpointObserver: BreakpointObserver) {\n\n    }\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/\\\">Dashboard</a>\\n      <a mat-list-item routerLink=\\\"/first-page\\\">First Page</a>\\n      <a mat-list-item routerLink=\\\"/second-page\\\">Second Page</a>\\n      <a mat-list-item routerLink=\\\"/third-page\\\">Third Page</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Application Title</span>\\n    </mat-toolbar>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n  \n  }\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface MyTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: MyTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the MyTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class MyTableDataSource extends DataSource<MyTableItem> {\n  data: MyTableItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<MyTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: MyTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: MyTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource.data.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { MyTableDataSource } from './my-table-datasource';\n\n@Component({\n  selector: 'my-table',\n  templateUrl: './my-table.component.html',\n  styleUrls: ['./my-table.component.css']\n})\nexport class MyTableComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: MyTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new MyTableDataSource(this.paginator, this.sort);\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  second-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-second-page',\n  templateUrl: './second-page.component.html',\n  styleUrls: ['./second-page.component.css']\n})\nexport class SecondPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  third-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-third-page',\n  templateUrl: './third-page.component.html',\n  styleUrls: ['./third-page.component.css']\n})\nexport class ThirdPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}